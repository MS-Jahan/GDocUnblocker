name: Build and Release APKs

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 'latest'

    - name: Install dependencies
      run: flutter pub get

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Decode keystore file
      run: |
        echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > my-release-key.jks

    - name: Extract version from pubspec.yaml
      id: extract_version
      run: |
        version=$(grep 'version:' pubspec.yaml | sed 's/version: \(.*\)/\1/')
        echo "VERSION=${version}" >> $GITHUB_ENV

    - name: Build APKs for different architectures
      run: |
        flutter build apk --release --target-platform android-arm,android-arm64,android-x64

    - name: Sign APKs
      run: |
        for apk in build/app/outputs/flutter-apk/*.apk; do
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore my-release-key.jks \
            -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
            -keypass "${{ secrets.KEY_PASSWORD }}" \
            "$apk" \
            "${{ secrets.KEY_ALIAS }}"
        done

    - name: Zipalign APKs
      run: |
        for apk in build/app/outputs/flutter-apk/*-unsigned.apk; do
          $ANDROID_HOME/build-tools/*/zipalign -v 4 \
            "$apk" \
            "${apk%*-unsigned.apk}-aligned.apk"
        done

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: Upload APKs
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-arm-release-aligned.apk
        asset_name: app-arm-release-aligned-${{ env.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload APKs (arm64)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-arm64-release-aligned.apk
        asset_name: app-arm64-release-aligned-${{ env.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload APKs (x64)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-x64-release-aligned.apk
        asset_name: app-x64-release-aligned-${{ env.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive
